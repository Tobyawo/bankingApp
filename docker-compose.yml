version: "3.8"
services:
  inventory-api-mysql:
    container_name: inventory-api-mysql
    image: mysql:8.0.33
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: mysql
      MYSQL_USER: admin
      MYSQL_PASSWORD: pwd
      MYSQL_ROOT_PASSWORD: pwd
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ./data/inventory-api-mysql:/data/mysql
    restart: unless-stopped

  notification-api-kafka-zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: notification-api-kafka-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  notification-api-kafka-broker:
    image: confluentinc/cp-kafka:7.3.3
    container_name: notification-api-kafka-broker
    ports:
      - "9092:9092"
    depends_on:
      - notification-api-kafka-zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'notification-api-kafka-zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    restart: unless-stopped

  oidc-provider-keycloak:
    image: quay.io/keycloak/keycloak:21.1.0
    container_name: oidc-provider-keycloak
    ports:
      - "8200:8080"
    command:
      - start-dev
      - --import-realm
    environment:
      DB_VENDOR: h2
      DB_ADDR: localhost
      DB_DATABASE: db
      DB_USER: username
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - ./keycloak-realm.json:/opt/keycloak/data/import/keycloak-realm.json

  order-api-postgres:
    image: postgres:15.2
    container_name: order-api-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: root
      POSTGRES_PASSWORD: admin
    volumes:
      - ./data/order-api-postgres:/data/postgres
    restart: unless-stopped

  product-api-mongo:
    image: mongo:6.0.5
    container_name: product-api-mongo
    ports:
      - "27017:27017"
    volumes:
      - ./data/product-api-mongo:/data/mongo
    restart: unless-stopped

  zipkin:
    image: openzipkin/zipkin:2.24.0
    container_name: zipkin
    ports:
      - "9411:9411"
