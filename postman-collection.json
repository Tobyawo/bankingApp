{
	"info": {
		"_postman_id": "7554b005-620c-4f1c-81a6-2acde9054e92",
		"name": "Mini-Shopify",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27145352"
	},
	"item": [
		{
			"name": "Authorization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"access_token\", pm.response.json().access_token);\r",
							"\r",
							"pm.test(\"Access token is present\", function () {\r",
							"    pm.expect(pm.environment.get(\"access_token\")).to.not.equal(null);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function (){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "default"
						},
						{
							"key": "client_id",
							"value": "{{client_id}}",
							"type": "default"
						},
						{
							"key": "client_secret",
							"value": "{{secret}}",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "{{oidc_provider}}",
					"host": [
						"{{oidc_provider}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Keycloak",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"access_token\", pm.response.json().access_token);\r",
							"\r",
							"pm.test(\"Access token is present\", function () {\r",
							"    pm.expect(pm.environment.get(\"access_token\")).to.not.equal(null);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function (){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "default"
						},
						{
							"key": "client_id",
							"value": "{{client_id}}",
							"type": "default"
						},
						{
							"key": "client_secret",
							"value": "**********",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "{{oidc_provider}}",
					"host": [
						"{{oidc_provider}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Products are present\", function () {\r",
							"    var responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.length).to.be.above(0);\r",
							"    pm.expect(responseJson[0]).to.have.property(\"id\");\r",
							"    pm.expect(responseJson[0]).to.have.property(\"name\");\r",
							"    pm.expect(responseJson[0]).to.have.property(\"description\");\r",
							"    pm.expect(responseJson[0]).to.have.property(\"price\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function (){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/product",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"product"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a new product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Product is created\", function () {\r",
							"    var responseBody = pm.response.text();\r",
							"    pm.expect(responseBody).to.include('Product created successfully:');\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 201\", function (){\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"The Lord of the Rings\",\r\n    \"description\": \"Paper book\",\r\n    \"price\": 99\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/product",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"product"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Products are present\", function () {\r",
							"    var responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.length).to.be.above(0);\r",
							"    pm.expect(responseJson[0]).to.have.property(\"id\");\r",
							"    pm.expect(responseJson[0]).to.have.property(\"name\");\r",
							"    pm.expect(responseJson[0]).to.have.property(\"description\");\r",
							"    pm.expect(responseJson[0]).to.have.property(\"price\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function (){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/product",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"product"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Product is not found\", function () {\r",
							"    var responseBody = pm.response.text();\r",
							"    pm.expect(responseBody).to.include('Product deleted successfully');\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function (){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"The Lord of the Rings\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/product",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"product"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a non-existent product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Product is removed\", function () {\r",
							"    var responseBody = pm.response.text();\r",
							"    pm.expect(responseBody).to.include('not found');\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 404\", function (){\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"The Lord of the Rings\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/product",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"product"
					]
				}
			},
			"response": []
		},
		{
			"name": "Successful order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Order placed\", function () {\r",
							"    var responseBody = pm.response.text();\r",
							"    pm.expect(responseBody).to.include('Order placed successfully!');\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function (){\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"orderLineItemsDtoList\":[\r\n        {\r\n            \"skuCode\": \"The Great Gatsby\",\r\n            \"price\": 199,\r\n            \"quantity\": 2\r\n        }\r\n    ]\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/order",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "Wrong quantity order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Order quantity is wrong\", function () {\r",
							"    var responseBody = pm.response.text();\r",
							"    pm.expect(responseBody).to.include('Oops! Something went wrong');\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function (){\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"orderLineItemsDtoList\":[\r\n        {\r\n            \"skuCode\": \"The Hunger Games\",\r\n            \"price\": 80,\r\n            \"quantity\": 1\r\n        }\r\n    ]\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/order",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"order"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}